{"version":3,"file":"static/js/412.82b16072.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/sdk/dist/token-cf8bd636.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './QueryParams-da88d27c.esm.js';\nimport { aA as StandardErc20, cM as ContractWrapper, am as ContractMetadata, d9 as TokenErc20ContractSchema, an as ContractRoles, ap as ContractPrimarySale, aX as ContractEvents, ax as TokenERC20History, al as ContractEncoder, aW as GasCostEstimator, aZ as ContractPlatformFee, aY as ContractInterceptor, ay as Erc20SignatureMintable, bC as getRoleHash } from './thirdweb-checkout-2c8d478b.esm.js';\nimport { constants } from 'ethers';\nimport 'bn.js';\nimport 'zod';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC165.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport 'tiny-invariant';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC20_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC721_V3.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropERC1155_V2.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ERC2771Context.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDirectListings.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IEnglishAuctions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IOffers.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPackVRFDirect.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IRouter.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\nimport 'cross-fetch';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\nimport '@thirdweb-dev/contracts-js/dist/abis/Forwarder.json';\nimport '@thirdweb-dev/storage';\nimport '@thirdweb-dev/contracts-js/dist/abis/Router.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport 'merkletreejs';\nimport 'fast-deep-equal';\nimport 'uuid';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryLogic.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/TWMultichainRegistryRouter.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/TWFactory.json';\nimport '@thirdweb-dev/contracts-js/dist/abis/TWRegistry.json';\nimport 'bs58';\n\n/**\n * Create a standard crypto token or cryptocurrency.\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"token\");\n * ```\n *\n * @public\n */\nclass Token extends StandardErc20 {\n  /**\n   * Signature Minting\n   * @remarks Generate tokens that can be minted only with your own signature, attaching your own set of mint conditions.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the tokens\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * ```\n   */\n\n  /**\n   * @internal\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new ContractWrapper(network, address, abi, options);\n    super(contractWrapper, storage, chainId);\n    _defineProperty(this, \"abi\", void 0);\n    _defineProperty(this, \"metadata\", void 0);\n    _defineProperty(this, \"roles\", void 0);\n    _defineProperty(this, \"encoder\", void 0);\n    _defineProperty(this, \"estimator\", void 0);\n    _defineProperty(this, \"history\", void 0);\n    _defineProperty(this, \"events\", void 0);\n    _defineProperty(this, \"platformFees\", void 0);\n    _defineProperty(this, \"sales\", void 0);\n    _defineProperty(this, \"signature\", void 0);\n    _defineProperty(this, \"interceptor\", void 0);\n    this.abi = abi;\n    this.metadata = new ContractMetadata(this.contractWrapper, TokenErc20ContractSchema, this.storage);\n    this.roles = new ContractRoles(this.contractWrapper, Token.contractRoles);\n    this.sales = new ContractPrimarySale(this.contractWrapper);\n    this.events = new ContractEvents(this.contractWrapper);\n    this.history = new TokenERC20History(this.contractWrapper, this.events);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.platformFees = new ContractPlatformFee(this.contractWrapper);\n    this.interceptor = new ContractInterceptor(this.contractWrapper);\n    this.signature = new Erc20SignatureMintable(this.contractWrapper, this.roles);\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get your wallet voting power for the current checkpoints\n   *\n   * @returns the amount of voting power in tokens\n   */\n  async getVoteBalance() {\n    return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress());\n  }\n  async getVoteBalanceOf(account) {\n    return await this.erc20.getValue(await this.contractWrapper.readContract.getVotes(account));\n  }\n\n  /**\n   * Get your voting delegatee address\n   *\n   * @returns the address of your vote delegatee\n   */\n  async getDelegation() {\n    return await this.getDelegationOf(await this.contractWrapper.getSignerAddress());\n  }\n\n  /**\n   * Get a specific address voting delegatee address\n   *\n   * @returns the address of your vote delegatee\n   */\n  async getDelegationOf(account) {\n    return await this.contractWrapper.readContract.delegates(account);\n  }\n\n  /**\n   * Get whether users can transfer tokens from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.readContract.hasRole(getRoleHash(\"transfer\"), constants.AddressZero);\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Mint Tokens for the connected wallet\n   *\n   * @remarks See {@link Token.mintTo}\n   */\n  async mint(amount) {\n    return this.erc20.mint(amount);\n  }\n\n  /**\n   * Mint Tokens\n   *\n   * @remarks Mint tokens to a specified address.\n   *\n   * @example\n   * ```javascript\n   * const toAddress = \"{{wallet_address}}\"; // Address of the wallet you want to mint the tokens to\n   * const amount = \"1.5\"; // The amount of this token you want to mint\n   *\n   * await contract.mintTo(toAddress, amount);\n   * ```\n   */\n  async mintTo(to, amount) {\n    return this.erc20.mintTo(to, amount);\n  }\n\n  /**\n   * Construct a mint transaction without executing it.\n   * This is useful for estimating the gas cost of a mint transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param receiver - Address you want to send the token to\n   * @param amount - The amount of tokens you want to mint\n   */\n  async getMintTransaction(to, amount) {\n    return this.erc20.getMintTransaction(to, amount);\n  }\n\n  /**\n   * Mint Tokens To Many Wallets\n   *\n   * @remarks Mint tokens to many wallets in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 0.2, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 1.4,\n   *  }\n   * ]\n   *\n   * await contract.mintBatchTo(data);\n   * ```\n   */\n  async mintBatchTo(args) {\n    return this.erc20.mintBatchTo(args);\n  }\n\n  /**\n   * Lets you delegate your voting power to the delegateeAddress\n   *\n   * @param delegateeAddress - delegatee wallet address\n   * @alpha\n   */\n  async delegateTo(delegateeAddress) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"delegate\", [delegateeAddress])\n    };\n  }\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the connected wallet\n   *\n   * @example\n   * ```javascript\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burnTokens(amount);\n   * ```\n   */\n  async burn(amount) {\n    return this.erc20.burn(amount);\n  }\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the specified wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const holderAddress = \"{{wallet_address}}\";\n   *\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.burnFrom(holderAddress, amount);\n   * ```\n   */\n  async burnFrom(holder, amount) {\n    return this.erc20.burnFrom(holder, amount);\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return this.contractWrapper.call(functionName, ...args);\n  }\n}\n_defineProperty(Token, \"contractRoles\", [\"admin\", \"minter\", \"transfer\"]);\n\nexport { Token };\n"],"names":["Token","_StandardErc","_inherits","_super","_createSuper","network","address","storage","_this","_classCallCheck","options","arguments","length","undefined","abi","chainId","contractWrapper","ContractWrapper","call","_defineProperty","_assertThisInitialized","metadata","ContractMetadata","TokenErc20ContractSchema","roles","ContractRoles","contractRoles","sales","ContractPrimarySale","events","ContractEvents","history","TokenERC20History","encoder","ContractEncoder","estimator","GasCostEstimator","platformFees","ContractPlatformFee","interceptor","ContractInterceptor","signature","Erc20SignatureMintable","_createClass","key","value","_getVoteBalance","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","this","getSignerAddress","t1","sent","getVoteBalanceOf","abrupt","stop","apply","_getVoteBalanceOf","_callee2","account","_context2","erc20","readContract","getVotes","getValue","_x","_getDelegation","_callee3","_context3","getDelegationOf","_getDelegationOf","_callee4","_context4","delegates","_x2","_isTransferRestricted","_callee5","anyoneCanTransfer","_context5","hasRole","getRoleHash","constants","_mint","_callee6","amount","_context6","mint","_x3","_mintTo","_callee7","to","_context7","mintTo","_x4","_x5","_getMintTransaction","_callee8","_context8","getMintTransaction","_x6","_x7","_mintBatchTo","_callee9","args","_context9","mintBatchTo","_x8","_delegateTo","_callee10","delegateeAddress","_context10","sendTransaction","receipt","_x9","_burn","_callee11","_context11","burn","_x10","_burnFrom","_callee12","holder","_context12","burnFrom","_x11","_x12","_call","_callee13","functionName","_this$contractWrapper","_len","_key","_args13","_context13","Array","concat","_x13","StandardErc20"],"sourceRoot":""}